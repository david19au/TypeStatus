#include "Global.xm"
#include "HBTSStatusBarView.mm" // for now...

#import "HBTSStatusBarWindow.h"
#import <Foundation/NSDistributedNotificationCenter.h>

#pragma mark - Constructor

%ctor {
	prefsBundle = [[NSBundle bundleWithPath:@"/Library/PreferenceBundles/TypeStatus.bundle"] retain];

	CFNotificationCenterAddObserver(CFNotificationCenterGetDarwinNotifyCenter(), NULL, (CFNotificationCallback)HBTSLoadPrefs, CFSTR("ws.hbang.typestatus/ReloadPrefs"), NULL, 0);

	[[NSNotificationCenter defaultCenter] addObserverForName:UIApplicationDidFinishLaunchingNotification object:nil queue:[NSOperationQueue mainQueue] usingBlock:^(NSNotification *notification) {
		overlayWindow = [[HBTSStatusBarWindow alloc] init];

		HBTSLoadPrefs();

		[[NSDistributedNotificationCenter defaultCenter] addObserverForName:HBTSClientSetStatusBarNotification object:nil queue:[NSOperationQueue mainQueue] usingBlock:^(NSNotification *notification) {
			BOOL typing = ((NSNumber *)notification.userInfo[kHBTSMessageIsTypingKey]).boolValue;

			if ([[NSDate date] timeIntervalSinceDate:notification.userInfo[kHBTSMessageSendDateKey]] > (typing && !typingTimeout ? kHBTSTypingTimeout : overlayDuration)) {
				return;
			}

			[overlayWindow showWithType:(HBTSStatusBarType)((NSNumber *)notification.userInfo[kHBTSMessageTypeKey]).intValue name:notification.userInfo[kHBTSMessageSenderKey] timeout:typing && !typingTimeout ? kHBTSTypingTimeout : overlayDuration];
		}];
	}];
}
